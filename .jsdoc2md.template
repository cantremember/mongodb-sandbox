# JSDoc for mongodb-sandbox

Launch a stand-alone MongoDB Topology for use within a Test Suite.


## Examples

`mongodb-sandbox` is Promise-based API.


Embed a [Lifecycle](#Lifecycle) into the [mocha](https://github.com/mochajs/mocha) Test Framework,
backed by a MongoDB 3.4.2 [Sandbox](#Sandbox).

> A variant of this Example, as well as examples for other Test Frameworks,
> can be found in the [README](./README.md#examples).

```javascript
const { createSandbox } = require('mongodb-sandbox');

const sandbox = createSandbox({
  version: '3.4.2',
});

before(function() {
  const lifecycle = sandbox.lifecycle(this);

  before(lifecycle.beforeAll);
  beforeEach(lifecycle.beforeEach);
  afterEach(lifecycle.afterEach);
  after(lifecycle.afterAll);
});
```


Programatically create, start and stop a MongoDB 3.6.8 [Sandbox](#Sandbox)

```javascript
const { createSandbox } = require('mongodb-sandbox');

const sandbox = createSandbox({
  version: '3.6.8',
});

sandbox.start()
.then(() => {
  // use it in some fashion

  // and when you're done,
  return sandbox.stop();
});
```


A script to install the latest version of MongoDB to back a [Sandbox](#Sandbox),
out-of-band from your Test Suite.

```javascript
#!/usr/bin/env node
const { installSandbox } = require('mongodb-sandbox');

installSandbox()
.then((sandbox) => {
  console.log('installed the latest version of MongoDB.');
});
```


## Options

Configuration properties are documented in [Sandbox.options](#Sandbox.options).

In addition to the properties a [Sandbox](#Sandbox) recognizes,
the you may provide any options passed to a `MongoDBDownload` instance
(from the [mongodb-download](https://github.com/winfinit/mongodb-download) module).

Several useful properties are:

- `version` - a specific MongoDB version, eg. '3.4.2';
  *default* = 'latest'
- `downloadDir` - the directory where the MongoDB binaries will be downloaded & installed.
  *default* = a cache local to the `mongodb-sandbox` module.


{{>main}}
